/* empty css                           */import { i as createVNode, s as spreadAttributes, F as Fragment } from '../astro.250d703e.mjs';
import { $ as $$PostLayout } from './about.md.61b6a5c1.mjs';
import '@astrojs/internal-helpers/path';
import 'node:fs';
import 'node:path';
import 'node:url';
import 'slash';
import 'node:fs/promises';
import 'html-escaper';
import 'fs';
import 'path';
import 'node:worker_threads';
import 'os';
import 'url';
import 'module';
import 'worker_threads';

const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="(.+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<br>\n<p>An eclipsing binary consists of two close stars moving in an orbit so placed in space in relation to Earth that the light of one can at times be hidden behind the other. Time series analysis in search for eclipsing binary stars can be daunting. Sometimes, it takes hours—even days or months—to find a single eclipsing binary in a dataset. However, when you find one, it is exciting. The following is an example light curve for target Kepler Object of Interest (KOI) 3570.</p>\n<h2 id=\"koi-3570\">KOI-3570</h2>\n<p><strong>KOI-3570</strong> (aliases: <strong>2MASS J19405783+4009273</strong>, <strong>KIC 5023948</strong>, and <strong>WISE J194057.82+400927.3</strong>) is an eclipsing binary star system. It is a member of the old open cluster NGC 6819. By analyzing the eclipse properties of this system, we can measure the mass and radius of each star. These measurements can be used to precisely determine the age of the stars.</p>\n<h2 id=\"getting-the-data-fits-file\">Getting the data: FITS file</h2>\n<p>If you’re familiar getting FITS files, then download the data from <a href=\"https://exoplanetarchive.ipac.caltech.edu\">Nasa Exoplanet Archive</a>. I downloaded the following batch file <code>download_exoarch_27821.bat</code> from the archive.</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #768390\">#!/bin/sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #768390\"># If wget is not installed on your system,</span></span>\n<span class=\"line\"><span style=\"color: #768390\"># please refer to http://irsa.ipac.caltech.edu/docs/batch_download_help.html.</span></span>\n<span class=\"line\"><span style=\"color: #768390\">#</span></span>\n<span class=\"line\"><span style=\"color: #768390\"># Windows users: the name of wget may have version number (ie: wget-1.10.2.exe)</span></span>\n<span class=\"line\"><span style=\"color: #768390\"># Please rename it to wget in order to successfully run this script</span></span>\n<span class=\"line\"><span style=\"color: #768390\"># Also the location of wget executable may need to be added to the PATH environment.</span></span>\n<span class=\"line\"><span style=\"color: #768390\">#</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2010355172524_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/281/81/kplr005023948-2010355172524_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2011073133259_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/415/00/kplr005023948-2011073133259_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2011177032512_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/314/41/kplr005023948-2011177032512_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2012004120508_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/482/00/kplr005023948-2012004120508_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2012088054726_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/514/78/kplr005023948-2012088054726_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2012179063303_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/548/10/kplr005023948-2012179063303_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2013011073258_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/614/95/kplr005023948-2013011073258_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2013098041711_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/647/84/kplr005023948-2013098041711_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2013131215648_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/681/29/kplr005023948-2013131215648_llc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr005023948-2012060035710_slc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/753/70/kplr005023948-2012060035710_slc.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-a</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">search_345998328.log</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Change the script file’s permissions to make it executable (for example, chmod 755 irsspect.bat):</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F69D50\">chmod</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">755</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">download_exoarch_27821.bat</span></span></code></pre>\n<h2 id=\"lightcurve\">Lightcurve</h2>\n<p>Use <a href=\"https://www.astropy.org/\">AstroPy</a> to plot a lightcurve (flux vs time) for KOI-3570. I am using <code>kplr005023948-2012060035710_slc.fits</code> because it has the greatest amount of data points in any file on the batch list—over 40,000 points.</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F47067\">from</span><span style=\"color: #ADBAC7\"> astropy.io </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> fits</span></span>\n<span class=\"line\"><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> matplotlib.pyplot </span><span style=\"color: #F47067\">as</span><span style=\"color: #ADBAC7\"> plt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">hdu </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> fits.open(</span><span style=\"color: #96D0FF\">'kplr005023948-2012060035710_slc.fits'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">time </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> hdu[</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">].data[</span><span style=\"color: #96D0FF\">'TIME'</span><span style=\"color: #ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">flux </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> hdu[</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">].data[</span><span style=\"color: #96D0FF\">'SAP_FLUX'</span><span style=\"color: #ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.plot(time, flux, </span><span style=\"color: #96D0FF\">'.'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">markersize</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">)</span></span></code></pre>\n<p><img src=\"/koi-3570-lc.png\" alt=\"koi-3570-lightcurve\"></p>\n<h2 id=\"phase-fold-lightcurve\">Phase Fold Lightcurve</h2>\n<p>Arguably, one of the most important parameters to find for an eclipsing binary star system is the orbital period. There are many ways to find the period around the center of mass and the method I like to use is a multi-term Lomb-Scargle approach. For this system, I used the period published in Brewer et al. 2016. They found an orbital period of 3.649301 days. Phase folding the light curve with this orbital period yields the following plot. The secondary and primary eclipses are at about phase equal to 0.2 and 0.7, respectively.</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">period </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">3.649301</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">phase </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> (time </span><span style=\"color: #F47067\">-</span><span style=\"color: #ADBAC7\"> time[</span><span style=\"color: #6CB6FF\">0</span><span style=\"color: #ADBAC7\">]) </span><span style=\"color: #F47067\">/</span><span style=\"color: #ADBAC7\"> period </span><span style=\"color: #F47067\">%</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">1</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.plot(phase, flux, </span><span style=\"color: #96D0FF\">'.'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">markersize</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">)</span></span></code></pre>\n<p><img src=\"/koi-3570-pflc.png\" alt=\"koi-3570-phasefold\"></p>\n<h2 id=\"references\">References</h2>\n<ol>\n<li><a href=\"https://exoplanetarchive.ipac.caltech.edu\">Nasa Exoplanet Archive</a></li>\n<li><a href=\"https://brew.sh/\">Homebrew</a></li>\n<li><a href=\"https://www.astropy.org/\">AstroPy</a></li>\n</ol>");

				const frontmatter = {"layout":"../layouts/post-layout.astro","date":"Apr 01, 2023","title":"KOI-3570: An Eclipsing Binary Star System","path":"/eclipsing-binaries","badges":["Python","Astropy"],"image":"koi-3570-pflc.png","alt":"koi-3570","excerpt":"An eclipsing binary consists of two close stars moving in an orbit so placed in space in relation to Earth that the light of one can at times be hidden behind the other."};
				const file = "/Users/davidjaimes/davidjaimes.github.io/src/pages/eclipsing-binaries.md";
				const url = "/eclipsing-binaries";
				function rawContent() {
					return "\n<br>\n\nAn eclipsing binary consists of two close stars moving in an orbit so placed in space in relation to Earth that the light of one can at times be hidden behind the other. Time series analysis in search for eclipsing binary stars can be daunting. Sometimes, it takes hours--even days or months--to find a single eclipsing binary in a dataset. However, when you find one, it is exciting. The following is an example light curve for target Kepler Object of Interest (KOI) 3570.\n\n## KOI-3570\n**KOI-3570** (aliases: **2MASS J19405783+4009273**, **KIC 5023948**, and **WISE J194057.82+400927.3**) is an eclipsing binary star system. It is a member of the old open cluster NGC 6819. By analyzing the eclipse properties of this system, we can measure the mass and radius of each star. These measurements can be used to precisely determine the age of the stars.\n\n## Getting the data: FITS file\nIf you're familiar getting FITS files, then download the data from [Nasa Exoplanet Archive][1]. I downloaded the following batch file `download_exoarch_27821.bat` from the archive.\n\n```bash\n#!/bin/sh\n\n# If wget is not installed on your system,\n# please refer to http://irsa.ipac.caltech.edu/docs/batch_download_help.html.\n#\n# Windows users: the name of wget may have version number (ie: wget-1.10.2.exe)\n# Please rename it to wget in order to successfully run this script\n# Also the location of wget executable may need to be added to the PATH environment.\n#\nwget -O 'kplr005023948-2010355172524_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/281/81/kplr005023948-2010355172524_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2011073133259_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/415/00/kplr005023948-2011073133259_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2011177032512_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/314/41/kplr005023948-2011177032512_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2012004120508_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/482/00/kplr005023948-2012004120508_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2012088054726_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/514/78/kplr005023948-2012088054726_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2012179063303_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/548/10/kplr005023948-2012179063303_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2013011073258_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/614/95/kplr005023948-2013011073258_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2013098041711_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/647/84/kplr005023948-2013098041711_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2013131215648_llc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/681/29/kplr005023948-2013131215648_llc.fits' -a search_345998328.log\nwget -O 'kplr005023948-2012060035710_slc.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//Kepler/005/753/70/kplr005023948-2012060035710_slc.fits' -a search_345998328.log\n\n```\n\nChange the script file's permissions to make it executable (for example, chmod 755 irsspect.bat):\n\n```bash\nchmod 755 download_exoarch_27821.bat\n```\n\n## Lightcurve\nUse [AstroPy][3] to plot a lightcurve (flux vs time) for KOI-3570. I am using `kplr005023948-2012060035710_slc.fits` because it has the greatest amount of data points in any file on the batch list--over 40,000 points.\n\n```python\nfrom astropy.io import fits\nimport matplotlib.pyplot as plt\n\nhdu = fits.open('kplr005023948-2012060035710_slc.fits')\ntime = hdu[1].data['TIME']\nflux = hdu[1].data['SAP_FLUX']\nplt.plot(time, flux, '.', markersize=1)\n```\n![koi-3570-lightcurve](/koi-3570-lc.png)\n\n## Phase Fold Lightcurve\nArguably, one of the most important parameters to find for an eclipsing binary star system is the orbital period. There are many ways to find the period around the center of mass and the method I like to use is a multi-term Lomb-Scargle approach. For this system, I used the period published in Brewer et al. 2016. They found an orbital period of 3.649301 days. Phase folding the light curve with this orbital period yields the following plot. The secondary and primary eclipses are at about phase equal to 0.2 and 0.7, respectively.\n\n```python\nperiod = 3.649301\nphase = (time - time[0]) / period % 1\nplt.plot(phase, flux, '.', markersize=1)\n```\n\n![koi-3570-phasefold](/koi-3570-pflc.png)\n\n## References\n1. [Nasa Exoplanet Archive][1]\n2. [Homebrew][2]\n3. [AstroPy][3]\n\n[1]: https://exoplanetarchive.ipac.caltech.edu\n[2]: https://brew.sh/\n[3]: https://www.astropy.org/\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"koi-3570","text":"KOI-3570"},{"depth":2,"slug":"getting-the-data-fits-file","text":"Getting the data: FITS file"},{"depth":2,"slug":"lightcurve","text":"Lightcurve"},{"depth":2,"slug":"phase-fold-lightcurve","text":"Phase Fold Lightcurve"},{"depth":2,"slug":"references","text":"References"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return createVNode($$PostLayout, {
									file,
									url,
									content,
									frontmatter: content,
									headings: getHeadings(),
									rawContent,
									compiledContent,
									'server:root': true,
									children: contentFragment
								});
				}
				Content[Symbol.for('astro.needsHeadRendering')] = false;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
