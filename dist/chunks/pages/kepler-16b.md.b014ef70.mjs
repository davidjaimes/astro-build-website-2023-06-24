/* empty css                           */import { i as createVNode, s as spreadAttributes, F as Fragment } from '../astro.250d703e.mjs';
import { $ as $$PostLayout } from './about.md.3b8b97f2.mjs';
import '@astrojs/internal-helpers/path';
import 'node:fs';
import 'node:path';
import 'node:url';
import 'slash';
import 'node:fs/promises';
import 'html-escaper';
import 'fs';
import 'path';
import 'node:worker_threads';
import 'os';
import 'url';
import 'module';
import 'worker_threads';

const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="(.+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<br>\n<p><strong>Kepler-16b</strong> (formally <strong>Kepler-16 (AB)-b</strong>) is an extrasolar planet. It is a Saturn-mass planet consisting of half gas and half rock and ice, and it orbits a binary star, Kepler-16, with a period of 229 days. “It is the first confirmed, unambiguous example of a circumbinary planet – a planet orbiting not one, but two stars,” said Josh Carter of the Harvard-Smithsonian Center for Astrophysics, one of the discovery team.</p>\n<h2 id=\"kepler-mission-data\">Kepler Mission Data</h2>\n<p>The Kepler Mission, a NASA Discovery mission launched on March 6, 2009, was the first space mission dedicated to the search for Earth-sized and smaller planets in the habitable zone of other stars in our neighborhood of the galaxy. Visit the <a href=\"https://exoplanetarchive.ipac.caltech.edu/index.html\">NASA Exoplanet Archive</a> website to find the data files for Kepler-16, the eclipsing binary star system, or any other Kepler Object of Interest (KOI) out there. The following lines can copied over to the command line on your terminal window to automatically download:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-v</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr012644769-20160128150956_dvt.fits'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//KeplerDV/005/713/24/kplr012644769-20160128150956_dvt.fits'</span></span>\n<span class=\"line\"><span style=\"color: #F69D50\">wget</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-v</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">-O</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr012644769_q1_q16_tce_01_dvt_lc.tbl'</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//KeplerDV/000/866/64/kplr012644769_q1_q16_tce_01_dvt_lc.tbl'</span></span></code></pre>\n<p><strong>Flexible Image Transport System (FITS)</strong> is an open standard defining a digital file format useful for storage, transmission and processing of data: formatted as multi-dimensional arrays (for example a 2D image), or tables. FITS is the most commonly used digital file format in astronomy. The FITS standard was designed specifically for astronomical data, and includes provisions such as describing photometric and spatial calibration information, together with image origin metadata. Visit the <a href=\"https://docs.astropy.org/en/stable/io/fits/\">AstroPy.org</a> documentation page to learn how to work with FITS files.</p>\n<h2 id=\"matplotlib-to-visualize-transits\">Matplotlib to Visualize Transits</h2>\n<p><strong>Matplotlib</strong> is a comprehensive library for creating static, animated, and interactive visualizations in Python.</p>\n<p>Import all the Python dependencies:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F47067\">from</span><span style=\"color: #ADBAC7\"> astropy.io </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> fits, </span><span style=\"color: #6CB6FF\">ascii</span></span>\n<span class=\"line\"><span style=\"color: #F47067\">from</span><span style=\"color: #ADBAC7\"> astropy.time </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> Time</span></span>\n<span class=\"line\"><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> matplotlib.pyplot </span><span style=\"color: #F47067\">as</span><span style=\"color: #ADBAC7\"> plt</span></span>\n<span class=\"line\"><span style=\"color: #F47067\">from</span><span style=\"color: #ADBAC7\"> matplotlib.dates </span><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> DateFormatter</span></span>\n<span class=\"line\"><span style=\"color: #F47067\">import</span><span style=\"color: #ADBAC7\"> pandas </span><span style=\"color: #F47067\">as</span><span style=\"color: #ADBAC7\"> pd</span></span></code></pre>\n<p>Use <code>astropy.io.fits</code> to read in the FITS file:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">fname </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr012644769-20160128150956_dvt.fits'</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">hdu </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> fits.open(fname)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">data </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> hdu[</span><span style=\"color: #6CB6FF\">1</span><span style=\"color: #ADBAC7\">].data</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">df </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> pd.DataFrame({</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">: data[</span><span style=\"color: #96D0FF\">'TIME'</span><span style=\"color: #ADBAC7\">], </span><span style=\"color: #96D0FF\">'flux'</span><span style=\"color: #ADBAC7\">: data[</span><span style=\"color: #96D0FF\">'LC_INIT'</span><span style=\"color: #ADBAC7\">]})</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">] </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> Time(df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">] </span><span style=\"color: #F47067\">+</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">2454833</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">format</span><span style=\"color: #F47067\">=</span><span style=\"color: #96D0FF\">'jd'</span><span style=\"color: #ADBAC7\">).datetime64</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.plot(df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">], df[</span><span style=\"color: #96D0FF\">'flux'</span><span style=\"color: #ADBAC7\">], </span><span style=\"color: #96D0FF\">'.'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">ms</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">3</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">label</span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\">fname)</span></span></code></pre>\n<p>Use <code>astropy.io.ascii</code> to read in the TBL file:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">fname </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #96D0FF\">'kplr012644769_q1_q16_tce_01_dvt_lc.tbl'</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">data </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">ascii</span><span style=\"color: #ADBAC7\">.read(fname)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">df </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> pd.DataFrame({</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">: data[</span><span style=\"color: #96D0FF\">'TIME'</span><span style=\"color: #ADBAC7\">], </span><span style=\"color: #96D0FF\">'flux'</span><span style=\"color: #ADBAC7\">: data[</span><span style=\"color: #96D0FF\">'INIT_FLUX_PL'</span><span style=\"color: #ADBAC7\">]})</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">] </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> Time(df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">] </span><span style=\"color: #F47067\">+</span><span style=\"color: #ADBAC7\"> </span><span style=\"color: #6CB6FF\">2454833</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">format</span><span style=\"color: #F47067\">=</span><span style=\"color: #96D0FF\">'jd'</span><span style=\"color: #ADBAC7\">).datetime64</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.plot(df[</span><span style=\"color: #96D0FF\">'time'</span><span style=\"color: #ADBAC7\">], df[</span><span style=\"color: #96D0FF\">'flux'</span><span style=\"color: #ADBAC7\">], </span><span style=\"color: #96D0FF\">'.'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">ms</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">3</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">c</span><span style=\"color: #F47067\">=</span><span style=\"color: #96D0FF\">'C0'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">label</span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\">fname)</span></span></code></pre>\n<p>Add names to your labels:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">plt.title(</span><span style=\"color: #96D0FF\">'Kepler-16'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">size</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">16</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.xlabel(</span><span style=\"color: #F47067\">r</span><span style=\"color: #96D0FF\">'Date </span><span style=\"color: #6CB6FF\">($</span><span style=\"color: #96D0FF\">P_{orb}=41</span><span style=\"color: #6CB6FF\">.</span><span style=\"color: #96D0FF\">0778</span><span style=\"color: #6CB6FF\">$</span><span style=\"color: #96D0FF\"> days</span><span style=\"color: #6CB6FF\">)</span><span style=\"color: #96D0FF\">'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">size</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">16</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.ylabel(</span><span style=\"color: #F47067\">r</span><span style=\"color: #96D0FF\">'Flux </span><span style=\"color: #6CB6FF\">($</span><span style=\"color: #96D0FF\">F_e/F_o - 1</span><span style=\"color: #6CB6FF\">$)</span><span style=\"color: #96D0FF\">'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">size</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">16</span><span style=\"color: #ADBAC7\">)</span></span></code></pre>\n<p>Use <code>matplotlib.dates.DateFormatter</code> to chage dates from <strong>YYYY-MM-DD</strong> to <strong>MMM YYYY</strong> format:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">date_form </span><span style=\"color: #F47067\">=</span><span style=\"color: #ADBAC7\"> DateFormatter(</span><span style=\"color: #96D0FF\">\"</span><span style=\"color: #F47067\">%b</span><span style=\"color: #96D0FF\"> %Y\"</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.gca().xaxis.set_major_formatter(date_form)</span></span></code></pre>\n<p>Add final layout options:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark-dimmed\" style=\"background-color: #22272e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ADBAC7\">plt.xticks(</span><span style=\"color: #F69D50\">rotation</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">45</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.grid(</span><span style=\"color: #F69D50\">ls</span><span style=\"color: #F47067\">=</span><span style=\"color: #96D0FF\">':'</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.legend(</span><span style=\"color: #F69D50\">markerscale</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">4</span><span style=\"color: #ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.tight_layout()</span></span>\n<span class=\"line\"><span style=\"color: #ADBAC7\">plt.savefig(</span><span style=\"color: #96D0FF\">'kepler-16.png'</span><span style=\"color: #ADBAC7\">, </span><span style=\"color: #F69D50\">dpi</span><span style=\"color: #F47067\">=</span><span style=\"color: #6CB6FF\">300</span><span style=\"color: #ADBAC7\">)</span></span></code></pre>\n<p><img src=\"/kepler-16.png\" alt=\"kepler-16\"></p>");

				const frontmatter = {"layout":"../layouts/post-layout.astro","date":"Dec 31, 2022","title":"Kepler-16b: The First Circumbinary Planet","path":"/kepler-16b","badges":["Python","Astropy"],"image":"kepler-16b.webp","alt":"kepler-16b","excerpt":"Kepler-16b is an extrasolar planet with a Saturn-mass consisting of half gas and half rock and ice, and it orbits a binary star, Kepler-16, with a period of 229 days."};
				const file = "/Users/davidjaimes/davidjaimes.github.io/src/pages/kepler-16b.md";
				const url = "/kepler-16b";
				function rawContent() {
					return "\n<br>\n\n**Kepler-16b** (formally **Kepler-16 (AB)-b**) is an extrasolar planet. It is a Saturn-mass planet consisting of half gas and half rock and ice, and it orbits a binary star, Kepler-16, with a period of 229 days. \"It is the first confirmed, unambiguous example of a circumbinary planet – a planet orbiting not one, but two stars,\" said Josh Carter of the Harvard-Smithsonian Center for Astrophysics, one of the discovery team.\n\n## Kepler Mission Data\n\nThe Kepler Mission, a NASA Discovery mission launched on March 6, 2009, was the first space mission dedicated to the search for Earth-sized and smaller planets in the habitable zone of other stars in our neighborhood of the galaxy. Visit the [NASA Exoplanet Archive](https://exoplanetarchive.ipac.caltech.edu/index.html) website to find the data files for Kepler-16, the eclipsing binary star system, or any other Kepler Object of Interest (KOI) out there. The following lines can copied over to the command line on your terminal window to automatically download:\n\n```bash\nwget -v -O 'kplr012644769-20160128150956_dvt.fits' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//KeplerDV/005/713/24/kplr012644769-20160128150956_dvt.fits'\nwget -v -O 'kplr012644769_q1_q16_tce_01_dvt_lc.tbl' 'http://exoplanetarchive.ipac.caltech.edu:80/data/ETSS//KeplerDV/000/866/64/kplr012644769_q1_q16_tce_01_dvt_lc.tbl'\n```\n\n**Flexible Image Transport System (FITS)** is an open standard defining a digital file format useful for storage, transmission and processing of data: formatted as multi-dimensional arrays (for example a 2D image), or tables. FITS is the most commonly used digital file format in astronomy. The FITS standard was designed specifically for astronomical data, and includes provisions such as describing photometric and spatial calibration information, together with image origin metadata. Visit the [AstroPy.org](https://docs.astropy.org/en/stable/io/fits/) documentation page to learn how to work with FITS files.\n\n## Matplotlib to Visualize Transits\n\n**Matplotlib** is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n\nImport all the Python dependencies:\n\n```python\nfrom astropy.io import fits, ascii\nfrom astropy.time import Time\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import DateFormatter\nimport pandas as pd\n```\n\nUse `astropy.io.fits` to read in the FITS file:\n\n```python\nfname = 'kplr012644769-20160128150956_dvt.fits'\nhdu = fits.open(fname)\ndata = hdu[1].data\ndf = pd.DataFrame({'time': data['TIME'], 'flux': data['LC_INIT']})\ndf['time'] = Time(df['time'] + 2454833, format='jd').datetime64\nplt.plot(df['time'], df['flux'], '.', ms=3, label=fname)\n```\n\nUse `astropy.io.ascii` to read in the TBL file:\n\n```python\nfname = 'kplr012644769_q1_q16_tce_01_dvt_lc.tbl'\ndata = ascii.read(fname)\ndf = pd.DataFrame({'time': data['TIME'], 'flux': data['INIT_FLUX_PL']})\ndf['time'] = Time(df['time'] + 2454833, format='jd').datetime64\nplt.plot(df['time'], df['flux'], '.', ms=3, c='C0', label=fname)\n```\n\nAdd names to your labels:\n\n```python\nplt.title('Kepler-16', size=16)\nplt.xlabel(r'Date ($P_{orb}=41.0778$ days)', size=16)\nplt.ylabel(r'Flux ($F_e/F_o - 1$)', size=16)\n```\n\nUse `matplotlib.dates.DateFormatter` to chage dates from **YYYY-MM-DD** to **MMM YYYY** format:\n\n```python\ndate_form = DateFormatter(\"%b %Y\")\nplt.gca().xaxis.set_major_formatter(date_form)\n```\n\nAdd final layout options:\n\n```python\nplt.xticks(rotation=45)\nplt.grid(ls=':')\nplt.legend(markerscale=4)\nplt.tight_layout()\nplt.savefig('kepler-16.png', dpi=300)\n```\n\n![kepler-16](/kepler-16.png)";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"kepler-mission-data","text":"Kepler Mission Data"},{"depth":2,"slug":"matplotlib-to-visualize-transits","text":"Matplotlib to Visualize Transits"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return createVNode($$PostLayout, {
									file,
									url,
									content,
									frontmatter: content,
									headings: getHeadings(),
									rawContent,
									compiledContent,
									'server:root': true,
									children: contentFragment
								});
				}
				Content[Symbol.for('astro.needsHeadRendering')] = false;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
